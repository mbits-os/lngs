#!/usr/python

import os, sys

def produce(f, keywords):
	out = {}
	for k in keywords:
		out[k] = {}

	type = None
	key = None
	value = None

	ln = 0
	for line in f:
		ln += 1
		line = line.strip()
		if line == '%%':
			if type is not None and type != "" and len(value) > 0:
				out[type][key] = value[0]
			type = None
			key = None
			value = None
			continue
		pair = line.split(":", 1)
		if len(pair) != 2: continue

		pair[0] = pair[0].strip()
		pair[1] = pair[1].strip()

		if pair[0] == "Type":
			if pair[1] in keywords: type = pair[1]
			else: type = ""
		elif pair[0] == "Subtag":
			if type is None: print "line %s: error: no type in record" % ln
			elif type == "": continue
			key = pair[1]
			value = []
		elif pair[0] == "Description":
			if type is None: print "line %s: error: no type in record" % ln
			elif type == "": continue
			if key is None: print "line %s: error: no subtag in record" % ln
			if pair[1] == "Private use":
				type = ""
			else:
				value.append(pair[1])
		elif pair[0] == "Scope":
			type = ""

	if type is not None and type != "":
		out[type][key] = value

	return out

# src: http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry
with open("language-subtag-registry.txt") as f:
	list = produce(f, ("language", "script", "region"))

	scripts = list["script"].keys()
	scripts.sort()
	del list["script"]

	keys = list.keys()
	keys.sort()
	
	with open("lang_codes.cpp", "w") as out:
		print >>out, "// THIS FILE IS AUTOGENERATED"
		print >>out, "// DATA SRC: http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry"
		print >>out
		print >>out, """namespace {

    struct token {
        const char* key;
        const char* value;
    };
"""
		for key in keys:
			print >>out, "    token %ss[] = {" % key
			subs = list[key].keys()
			subs.sort()
			for sub in subs: print >>out, "        { \"%s\", \"%s\" }," % (sub, list[key][sub])
			print >>out, "    };"
			print >>out
		print >>out, "    const char* scripts[] = {"
		for script in scripts: print >>out, "        \"%s\"," %  (script,)
		out.write("""    };
}

#include "lang_codes.inl"
""")