/*
 * Copyright (C) 2015 midnightBITS
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#include <lngs/commands.hpp>
#include <lngs/strings.hpp>
#include <lngs/streams.hpp>

namespace lngs::py {
	int write(outstream& out, const idl_strings& defs)
	{
		out.printf(R"(#!/usr/bin/python
# -*- coding: UTF-8 -*-

# THIS FILE IS AUTOGENERATED

)");
		bool has_singular = false;
		bool has_plural = false;

		for (auto& str : defs.strings) {
			if (!str.plural.empty()) {
				has_plural = true;
				continue;
			}

			has_singular = true;

			auto message = straighten(str.value);
			auto help = straighten(str.help);

			out.printf("%s = %d # %s", str.key.c_str(), str.id, message.c_str());
			if (!help.empty())
				out.printf(" (%s)", help.c_str());
			out.printf("\n");
		}

		if (has_singular && has_plural)
			out.printf("\n");

		for (auto& str : defs.strings) {
			if (str.plural.empty())
				continue;

			auto message = straighten(str.value);
			auto plural = straighten(str.plural);
			auto help = straighten(str.help);

			out.printf("%s = %d # %s", str.key.c_str(), str.id, message.c_str());
			if (!plural.empty())
				out.printf(" | %s", plural.c_str());
			if (!help.empty())
				out.printf(" (%s)", help.c_str());
			out.printf("\n");
		}

		return 0;
	}
}
