// THIS FILE IS AUTOGENERATED
#pragma once

#include <lngs/lngs.hpp>

namespace lngs::app {
    enum class lng {
        ARGS_USAGE = 500, // usage:  (Synopsis header; please note there is one space at the end of this entry)
        ARGS_DEF_META = 501, // <arg> (Default name of an argument)
        ARGS_POSITIONALS = 502, // positional arguments (Header for list of positional arguments)
        ARGS_OPTIONALS = 503, // optional arguments (Header for list of optional arguments)
        ARGS_HELP_DESCRIPTION = 504, // shows this help message and exits (Description for the -h/--help argument)
        ARGS_UNRECOGNIZED = 505, // unrecognized argument: {0} (Error message for an unrecognized argument; the placeholder will contain the name of the argument)
        ARGS_NEEDS_PARAM = 506, // argument {0}: expected one argument (Error message for a missing argument)
        ARGS_NEEDS_NUMBER = 507, // argument {0}: expected a number (Error message for a numeric argument, when parsing failed)
        ARGS_NEEDED_NUMBER_EXCEEDED = 508, // argument {0}: number outside of expected bounds (Error message for a numeric argument, when parsing would get outside of representable bounds)
        ARGS_REQUIRED = 509, // argument {0} is required (Error message for a missing required argument)
        ARGS_ERROR_MSG = 510, // {0}: error: {1} (Error message template; placeholder 0 will get the name of program, placeholder 1 an actual message)
        ARGS_APP_DESCR_CMD_MAKE = 511, // Translates MO file to LNG file. (Help description for the 'lngs make' command)
        ARGS_APP_DESCR_CMD_POT = 512, // Creates POT file from message file. (Help description for the 'lngs pot' command)
        ARGS_APP_DESCR_CMD_ENUMS = 513, // Creates header file from message file. (Help description for the 'lngs enums' command)
        ARGS_APP_DESCR_CMD_PY = 514, // Creates Python module with string keys. (Help description for the 'lngs py' command)
        ARGS_APP_DESCR_CMD_RES = 515, // Creates C++ file with fallback resource for the message file. (Help description for the 'lngs res' command)
        ARGS_APP_DESCR_CMD_FREEZE = 516, // Reads the language description file and assigns values to new strings. (Help description for the 'lngs freeze' command)
        ARGS_APP_DESCR_USAGE = 517, // [-h] [--version] <command> [<arguments>] (Synopsis for the app. The "[-h] [--version]" part should be left intact, only the "command" and "arguments" words should be translated.)
        ARGS_APP_FLOW_TITLE = 518, // The flow for string management and creation (Title for the description of the flow for different roles)
        ARGS_APP_FLOW_ROLE_STRMGR = 519, // Translation Manager (Name of a role responsible for finalizing the list of translations)
        ARGS_APP_FLOW_ROLE_TRANSLATOR = 520, // Translator (Name of a role responsible for supplying translated strings)
        ARGS_APP_FLOW_ROLE_DEV_COMPILE = 521, // Developer (compiling existing list) (Name of a role responsible for updating the C++ interfaces to project-specific lngs files)
        ARGS_APP_FLOW_ROLE_DEV_ADD = 522, // Developer (adding new string) (Name of a role responsible for adding new entries to be used in the code)
        ARGS_APP_FLOW_ROLE_DEV_RELEASE = 523, // Developer (releasing a build) (Name of a role responsible for transforming .po files to lngs files)
        ARGS_APP_KNOWN_CMDS = 524, // known commands (Header for list of known commands)
        ARGS_APP_NO_COMMAND = 525, // command missing (Error message displayed, when a command is missing in the command line)
        ARGS_APP_UNK_COMMAND = 526, // unknown command: {0} (Error message displayed, when a command from command line is not recognized)
        ARGS_APP_META_FILE = 527, // <file> (Name of argument holding a file name)
        ARGS_APP_META_HOLDER = 528, // <holder> (Name of argument for rights holder)
        ARGS_APP_META_EMAIL = 529, // <email> (Name of argument holding an email address)
        ARGS_APP_META_TITLE = 530, // <title> (Name of argument holding a heading)
        ARGS_APP_META_MO_FILE = 531, // <mo file> (Name of argument holding a file name for a GetText MO file)
        ARGS_APP_VERSION = 532, // shows program version and exits (Description for 'version' argument)
        ARGS_APP_VERBOSE = 533, // shows more info (Description for 'verbose' argument)
        ARGS_APP_COPYRIGHT = 534, // sets the name of copyright holder (Description for 'copyright' argument)
        ARGS_APP_AUTHOR = 535, // sets the name and email address of first author (Description for 'author' argument)
        ARGS_APP_TITLE = 536, // sets a descriptive title for the POT project (Description for 'title' argument)
        ARGS_APP_RESOURCE = 537, // instructs the Strings type to use data generated by the `lngs res'. (Description for 'resource' argument)
        ARGS_APP_WARP_MISSING_SINGULAR = 538, // replaces missing strings with warped ones; resulting strings are always singular (Description for argument adding in English strings of missing entries, but replacing all letters with similar-looking but different letters.)
        ARGS_APP_WARP_ALL_PLURAL = 539, // replaces all strings with warped ones; plural strings will still be plural (as if English) (Description for argument changing all strings in a resource file, by replacing all letters with similar-looking but different letters.)
        ARGS_APP_WITH_KEY_BLOCK = 540, // adds block of strings with key names (Description for argument allowing for additional, optional block in resulting file)
        ARGS_APP_ALT_INCLUDE = 541, // sets file name to #include in the implementation of the Resource class; defaults to "<project>.hpp". (Description for argument allowing to change the name of an include file to be more in-line with project's layout)
        ARGS_APP_OUT_POT = 542, // sets POT file name to write results to; use "-" for standard output (Description for output argument for lngs pot)
        ARGS_APP_OUT_CPP = 543, // sets C++ header file name to write results to; use "-" for standard output (Description for output argument for lngs enums)
        ARGS_APP_OUT_RES = 544, // sets C++ code file name with builtin strings to write results to; use "-" for standard output (Description for output argument for lngs res)
        ARGS_APP_OUT_PY = 545, // sets Python file name to write results to; use "-" for standard output (Description for output argument for lngs py)
        ARGS_APP_OUT_LNG = 546, // sets LNG binary file name to write results to; use "-" for standard output (Description for output argument for lngs make)
        ARGS_APP_OUT_IDL = 547, // sets IDL message file name to write results to; it may be the same as input; use "-" for standard output (Description for output argument for lngs freeze)
        ARGS_APP_IN_IDL = 548, // sets message file name to read from (Description for input argument taking IDL file)
        ARGS_APP_IN_MO = 549, // sets GetText message file name to read from (Description for input argument taking GetText MO file)
        ARGS_APP_IN_LLCC = 550, // sets ATTR_LANGUAGE file name with ll_CC (language_COUNTRY) names list (Description for input argument taking TXT file with language/country names)
        SEVERITY_NOTE = 1001, // note (Name of the severity label for notes.)
        SEVERITY_WARNING = 1002, // warning (Name of the severity label for warnings.)
        SEVERITY_ERROR = 1003, // error (Name of the severity label for errors.)
        SEVERITY_FATAL = 1004, // fatal (Name of the severity label for fatals.)
        ERR_FILE_MISSING = 1005, // could not open `{0}' (Needed file was not found; filename is going to be shown as argument {0}.)
        ERR_FILE_NOT_FOUND = 1006, // could not open the file (Needed file was not found; filename is going to be shown as source of message.)
        ERR_NOT_STRINGS_FILE = 1007, // `{0}' is not strings file (Presented as additional message, if input file was not parsed properly.)
        ERR_NO_NEW_STRINGS = 1008, // no new strings (Shown by lngs freeze.)
        ERR_ATTR_EMPTY = 1009, // attribute `{0}' should not be empty (Used for attributes with no value. The argument represents the name of the attribute.)
        ERR_ATTR_MISSING = 1010, // attribute `{0}' is missing (Optional attribute is not present. The argument represents the name of the attribute.)
        ERR_REQ_ATTR_MISSING = 1011, // required attribute `{0}' is missing (A required attribute is not present. The argument represents the name of the attribute.)
        ERR_ID_MISSING_HINT = 1012, // before finalizing a value, use `id(-1)' (Hint for IDL authors, when an id attribute is missing.)
        ERR_EXPECTED = 1013, // expected {0}, got {1} (Information about bad syntax in the strings file. The arguments represent the expected and actual token, respectively.)
        ERR_EXPECTED_GOT_UNRECOGNIZED = 1014, // unrecognized text (Used as second argument for ERR_EXPECTED, as in "..., got unrecognized text")
        ERR_EXPECTED_STRING = 1016, // string (Used as first argument for ERR_EXPECTED, as in "expected string")
        ERR_EXPECTED_NUMBER = 1017, // number (Used as first argument for ERR_EXPECTED, as in "expected number")
        ERR_EXPECTED_ID = 1018, // identifier (Used as first argument for ERR_EXPECTED, as in "expected identifier")
        ERR_EXPECTED_GOT_EOF = 1019, // EOF (Used as second argument for ERR_EXPECTED, as in "..., got EOF")
        ERR_EXPECTED_GOT_STRING = 1020, // string (Used as second argument for ERR_EXPECTED, as in "..., got string")
        ERR_EXPECTED_GOT_NUMBER = 1021, // number (Used as second argument for ERR_EXPECTED, as in "..., got number")
        ERR_EXPECTED_GOT_ID = 1022, // identifier (Used as second argument for ERR_EXPECTED, as in "..., got identifier")
        ERR_MSGS_TRANSLATION_MISSING = 1023, // message file does not contain translation for "{0}" (Warning for a missing string. The argument will be replaced by identifier with missing translation.)
        ERR_MSGS_ATTR_LANG_MISSING = 1024, // message file does not contain Language attribute (The gettext MO file has no attribute for language-REGION pair. The word "Language" is not to be translated.)
        ERR_UNANMED_LOCALE = 1025, // locale {0} has no name (Message for missing name for a locale with no name for the culture in file with locale/name pairs.)
        ERR_LOCALE_MISSING = 1026, // no {0} locale on the list (Message for missing locale in file with locale/culture name pairs.)
        ERR_GETTEXT_FORMAT = 1027, // gettext file format error (The MO file has unexpected contents)
        ERR_GETTEXT_BLOCKS_OVERLAP = 1028, // two or more blocks occupy the same space (Detail of what was wrong with the contents)
        ERR_GETTEXT_STRING_OUTSIDE = 1029, // string not contained inside the block (Detail of what was wrong with the contents)
        ERR_GETTEXT_FILE_TRUNCATED = 1030, // file truncated; data missing (Detail of what was wrong with the contents)
        ERR_GETTEXT_NOT_ASCIIZ = 1031, // strings must end with a zero (Detail of what was wrong with the contents)
    }; // enum class lng

    struct Resource {
        static const char* data();
        static std::size_t size();
    };

    using Strings = lngs::SingularStrings<lng, lngs::storage::FileWithBuiltin<Resource>>;
} // namespace lngs
