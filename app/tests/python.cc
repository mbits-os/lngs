#include <gtest/gtest.h>
#include <lngs/internals/commands.hpp>
#include <lngs/internals/strings.hpp>
#include "diag_helper.h"

namespace lngs::app::testing {
	using namespace ::std::literals;
	using ::testing::TestWithParam;
	using ::testing::ValuesIn;
	using namespace ::diags;

	struct py_result {
		std::string_view input;
		std::string output;
	};

	class python : public TestWithParam<py_result> {};

	TEST_P(python, text) {
		auto [input, expected] = GetParam();

		sources diag;
		diag.set_contents("", input);

		idl_strings strings;
		bool idl_valid = read_strings(diag.source(""), strings, diag);
		EXPECT_TRUE(idl_valid);

		outstrstream output;
		app::py::write(output, strings, {});
		EXPECT_EQ(expected, output.contents);
	}

	const py_result sources[] = {
	    {
	        R"([serial(0)]
strings {
	[id(-1), help("help string"), plural("values")] ID = "value";
	[id(1001), plural("values"), help("help string")] ID2 = "value2";
	[id(-1), help("help string")] ID3 = "value3";
})",
	        R"(#!/usr/bin/python
# -*- coding: UTF-8 -*-

# THIS FILE IS AUTOGENERATED

ID3 = 1003 # value3 (help string)

ID = 1002 # value | values (help string)
ID2 = 1001 # value2 | values (help string)
)"},
	    {
	        R"([serial(0), project("name")]
strings {
	[id(-1), help("help string"), plural("values")] ID = "value";
	[id(1001), plural("values"), help("help string")] ID2 = "value2";
	[id(-1), help("help string")] ID3 = "value3";
})",
	        R"(#!/usr/bin/python
# -*- coding: UTF-8 -*-

# THIS FILE IS AUTOGENERATED

ID3 = 1003 # value3 (help string)

ID = 1002 # value | values (help string)
ID2 = 1001 # value2 | values (help string)
)"},
	    {
	        R"([serial(0), project("name")]
strings {
	[id(1001), help("help string")] ID = "value";
	[id(1002), help("help string")] ID2 = "value2";
	[id(1003), help("help string")] ID3 = "value3";
})",
	        R"(#!/usr/bin/python
# -*- coding: UTF-8 -*-

# THIS FILE IS AUTOGENERATED

ID = 1001 # value (help string)
ID2 = 1002 # value2 (help string)
ID3 = 1003 # value3 (help string)
)"},
	    {
	        R"([serial(0), project("name")]
strings {
	[id(-1), help("help string"), plural("values")] ID = "value";
	[id(1001), plural("values"), help("help string")] ID2 = "value2";
})",
	        R"(#!/usr/bin/python
# -*- coding: UTF-8 -*-

# THIS FILE IS AUTOGENERATED

ID = 1002 # value | values (help string)
ID2 = 1001 # value2 | values (help string)
)"},
	};

	INSTANTIATE_TEST_SUITE_P(sources, python, ValuesIn(sources));
}  // namespace lngs::app::testing
